{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/lihan2/Documents/project/chatui4cythera/src/app/dashboard/ThinkContext.tsx"],"sourcesContent":["import { createContext, useContext, ReactNode, useState } from 'react';\n\nexport type ThinkData = {\n  // 定义Think数据的类型\n  content: string;\n  parsedContent?: {\n    layout?: string;\n    cards?: Array<{\n      type: string;\n      metrics: Array<{\n        title: string;\n        value: string | number;\n        trend?: string;\n      }>;\n    }>;\n    charts?: Array<{\n      type: string;\n      data: string;\n      title: string;\n      xAxis?: string;\n      yAxis?: string;\n    }>;\n  };\n  metadata?: Record<string, any>;\n};\n\ntype ThinkContextType = {\n  thinkData: ThinkData | null;\n  setThinkData: (data: ThinkData | ((prev: ThinkData | null) => ThinkData)) => void;\n};\n\nconst ThinkContext = createContext<ThinkContextType | null>(null);\n\nexport function ThinkProvider({ children }: { children: ReactNode }) {\n  const [thinkData, setThinkData] = useState<ThinkData | null>(null);\n\n  return (\n    <ThinkContext.Provider value={{ thinkData, setThinkData }}>\n      {children}\n    </ThinkContext.Provider>\n  );\n}\n\nexport function useThinkContext() {\n  const context = useContext(ThinkContext);\n  if (!context) {\n    throw new Error('useThinkContext must be used within a ThinkProvider');\n  }\n  return context;\n}"],"names":[],"mappings":";;;;;AAAA;;;;AA+BA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA2B;AAErD,SAAS,cAAc,EAAE,QAAQ,EAA2B;;IACjE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;IAE7D,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAW;QAAa;kBACrD;;;;;;AAGP;GARgB;KAAA;AAUT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///Users/lihan2/Documents/project/chatui4cythera/src/app/dashboard/components/CardGrid.tsx"],"sourcesContent":["import { Card, Metric, Text } from \"@tremor/react\";\n\n// 卡片数据类型定义\nexport interface CardData {\n  title: string;\n  value: string | number;\n  trend?: string;\n}\n\ninterface CardGridProps {\n  cardData: CardData[];\n}\n\n// 卡片网格组件\nexport const CardGrid = ({ cardData }: CardGridProps) => {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n      {cardData.map((card, index) => (\n        <Card key={index} className=\"bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl shadow-lg hover:shadow-xl transition-shadow\">\n          <Text className=\"text-gray-300\">{card.title}</Text>\n          <Metric className=\"text-white\">{card.value}</Metric>\n          {card.trend && (\n            <div className={`text-xs mt-2 ${card.trend.startsWith('+') ? 'text-green-400' : 'text-red-400'}`}>\n              {card.trend}\n            </div>\n          )}\n        </Card>\n      ))}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;;;AAcO,MAAM,WAAW,CAAC,EAAE,QAAQ,EAAiB;IAClD,qBACE,6LAAC;QAAI,WAAU;kBACZ,SAAS,GAAG,CAAC,CAAC,MAAM,sBACnB,6LAAC,mOAAA,CAAA,OAAI;gBAAa,WAAU;;kCAC1B,6LAAC,iOAAA,CAAA,OAAI;wBAAC,WAAU;kCAAiB,KAAK,KAAK;;;;;;kCAC3C,6LAAC,uOAAA,CAAA,SAAM;wBAAC,WAAU;kCAAc,KAAK,KAAK;;;;;;oBACzC,KAAK,KAAK,kBACT,6LAAC;wBAAI,WAAW,CAAC,aAAa,EAAE,KAAK,KAAK,CAAC,UAAU,CAAC,OAAO,mBAAmB,gBAAgB;kCAC7F,KAAK,KAAK;;;;;;;eALN;;;;;;;;;;AAYnB;KAhBa","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///Users/lihan2/Documents/project/chatui4cythera/src/app/dashboard/components/EChartComponent.tsx"],"sourcesContent":["import { Card } from \"@tremor/react\";\nimport { \n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, \n  PieChart, Pie, Cell, RadarChart, Radar, PolarGrid, PolarAngleAxis, PolarRadiusAxis, \n  LineChart, Line \n} from \"recharts\";\n\n// 图表数据类型定义\nexport interface ChartData {\n  type: string;\n  data: any[];\n  title: string;\n  xAxis?: string;\n  yAxis?: string;\n}\n\ninterface ChartComponentProps {\n  chart: ChartData;\n  index: number;\n}\n\n// 图表组件 - 根据类型渲染不同的图表\nexport const ChartComponent = ({ chart, index }: ChartComponentProps) => {\n  // 根据图表类型渲染不同的图表组件\n  switch(chart.type) {\n    case 'bar':\n      return (\n        <Card key={`chart-${index}`} className=\"bg-white/5 backdrop-blur-md border border-white/10 rounded-3xl shadow-2xl hover:shadow-3xl transition-all duration-300 hover:scale-[1.02] p-6\">\n          <h2 className=\"text-2xl font-semibold text-white mb-4\">{chart.title || '数据图表'}</h2>\n          <div className=\"h-[400px] relative\">\n            <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500/10 to-purple-500/10 rounded-3xl\"></div>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={chart.data}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n                <XAxis dataKey=\"name\" stroke=\"#9CA3AF\" />\n                <YAxis stroke=\"#9CA3AF\" />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: \"rgba(255,255,255,0.15)\",\n                    backdropFilter: \"blur(12px)\",\n                    border: \"1px solid rgba(255,255,255,0.2)\",\n                    borderRadius: \"12px\",\n                    boxShadow: \"0 8px 32px rgba(0,0,0,0.1)\"\n                  }}\n                  itemStyle={{\n                    color: \"white\",\n                    fontWeight: \"500\"\n                  }}\n                />\n                <Legend />\n                <Bar dataKey=\"value\" fill=\"#3B82F6\" name={chart.yAxis || '数值'} />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </Card>\n      );\n      \n    case 'pie':\n      return (\n        <Card key={`chart-${index}`} className=\"bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl shadow-lg hover:shadow-xl transition-shadow p-6\">\n          <h2 className=\"text-2xl font-semibold text-white mb-4\">{chart.title || '饼图数据'}</h2>\n          <div className=\"h-[400px]\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={chart.data}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                  outerRadius={100}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {chart.data.map((_: any, i: number) => (\n                    <Cell key={`cell-${i}`} fill={['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'][i % 5]} />\n                  ))}\n                </Pie>\n                <Tooltip\n                  contentStyle={{ backgroundColor: \"#1F2937\", borderColor: \"#374151\" }}\n                  itemStyle={{ color: \"#F3F4F6\" }}\n                />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </Card>\n      );\n      \n    case 'line':\n      return (\n        <Card key={`chart-${index}`} className=\"bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl shadow-lg hover:shadow-xl transition-shadow p-6\">\n          <h2 className=\"text-2xl font-semibold text-white mb-4\">{chart.title || '线图数据'}</h2>\n          <div className=\"h-[400px]\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                data={chart.data}\n                margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n                <XAxis dataKey=\"date\" stroke=\"#9CA3AF\" />\n                <YAxis stroke=\"#9CA3AF\" />\n                <Tooltip\n                  contentStyle={{ backgroundColor: \"#1F2937\", borderColor: \"#374151\" }}\n                  itemStyle={{ color: \"#F3F4F6\" }}\n                />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"energy\" stroke=\"#3B82F6\" name=\"能耗\" />\n                <Line type=\"monotone\" dataKey=\"temp_high\" stroke=\"#F59E0B\" name=\"温度\" />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </Card>\n      );\n      \n    case 'radar':\n      return (\n        <Card key={`chart-${index}`} className=\"bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl shadow-lg hover:shadow-xl transition-shadow p-6\">\n          <h2 className=\"text-2xl font-semibold text-white mb-4\">{chart.title || '雷达图数据'}</h2>\n          <div className=\"h-[400px]\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={chart.data}>\n                <PolarGrid />\n                <PolarAngleAxis dataKey=\"skill\" stroke=\"#9CA3AF\" />\n                <PolarRadiusAxis angle={30} domain={[0, 100]} stroke=\"#9CA3AF\" />\n                <Radar name=\"数值\" dataKey=\"value\" stroke=\"#3B82F6\" fill=\"#3B82F6\" fillOpacity={0.6} />\n                <Tooltip\n                  contentStyle={{ backgroundColor: \"#1F2937\", borderColor: \"#374151\" }}\n                  itemStyle={{ color: \"#F3F4F6\" }}\n                />\n                <Legend />\n              </RadarChart>\n            </ResponsiveContainer>\n          </div>\n        </Card>\n      );\n      \n    default:\n      return (\n        <Card key={`chart-${index}`} className=\"bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl shadow-lg hover:shadow-xl transition-shadow p-6\">\n          <h2 className=\"text-2xl font-semibold text-white mb-4\">{chart.title || '数据图表'}</h2>\n          <div className=\"h-[400px] flex items-center justify-center\">\n            <p className=\"text-gray-400\">未知图表类型: {chart.type}</p>\n          </div>\n        </Card>\n      );\n  }\n};\n\n// 默认图表组件 - 当没有图表数据时显示\ninterface DefaultChartsProps {\n  dashboardData: any[];\n}\n\nexport const DefaultCharts = ({ dashboardData }: DefaultChartsProps) => {\n  return (\n    <>\n      <Card className=\"bg-white/5 backdrop-blur-md border border-white/10 rounded-3xl shadow-2xl hover:shadow-3xl transition-all duration-300 hover:scale-[1.02] p-6\">\n        <h2 className=\"text-2xl font-semibold text-white mb-4\">月度数据</h2>\n        <div className=\"h-[400px] relative\">\n          <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500/10 to-purple-500/10 rounded-3xl\"></div>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={dashboardData}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n              <XAxis dataKey=\"name\" stroke=\"#9CA3AF\" />\n              <YAxis stroke=\"#9CA3AF\" />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: \"rgba(255,255,255,0.15)\",\n                  backdropFilter: \"blur(12px)\",\n                  border: \"1px solid rgba(255,255,255,0.2)\",\n                  borderRadius: \"12px\",\n                  boxShadow: \"0 8px 32px rgba(0,0,0,0.1)\"\n                }}\n                itemStyle={{\n                  color: \"white\",\n                  fontWeight: \"500\"\n                }}\n              />\n              <Legend />\n              <Bar dataKey=\"candidates\" fill=\"#3B82F6\" name=\"候选人数量\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </Card>\n\n      <Card className=\"bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl shadow-lg hover:shadow-xl transition-shadow p-6\">\n        <h2 className=\"text-2xl font-semibold text-white mb-4\">职位分布</h2>\n        <div className=\"h-[400px]\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart>\n              <Pie\n                data={Object.entries(dashboardData[0].positions).map(([name, value]) => ({ name, value }))}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={false}\n                label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                outerRadius={100}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n              >\n                {Object.keys(dashboardData[0].positions).map((_, index) => (\n                  <Cell key={`cell-${index}`} fill={['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'][index % 5]} />\n                ))}\n              </Pie>\n              <Tooltip\n                contentStyle={{ backgroundColor: \"#1F2937\", borderColor: \"#374151\" }}\n                itemStyle={{ color: \"#F3F4F6\" }}\n              />\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n      </Card>\n    </>\n  );\n};\n\n// 图表网格组件\ninterface ChartGridProps {\n  chartData: ChartData[];\n}\n\nexport const ChartGrid = ({ chartData }: ChartGridProps) => {\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n      {chartData.length > 0 ? (\n        chartData.map((chart, index) => (\n          <ChartComponent key={index} chart={chart} index={index} />\n        ))\n      ) : null\n      }\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 816, "column": 0}, "map": {"version":3,"sources":["file:///Users/lihan2/Documents/project/chatui4cythera/src/app/dashboard/components/Sidebar.tsx"],"sourcesContent":["import { useState, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { motion } from \"framer-motion\";\nimport dynamic from 'next/dynamic';\n\nconst ChatComponent = dynamic<{ currentRole?: string }>(() => import('./ChatComponent').then(mod => mod.default), {\n  ssr: false\n});\n\n// 助手名称常量\nexport const ASSISTANT_NAMES = [\n  '数字能效分析师',\n  '数字环境专员',\n  // '数字安防监控员',\n  '数字设备健康主管',\n  '数字综合运营协调员',\n];\n\ninterface SidebarProps {\n  activeChat: number | null;\n  setActiveChat: (chat: number | null) => void;\n  messages: string[];\n  sidebarWidth: number;\n}\n\n// 侧边栏组件\nexport const Sidebar = ({ activeChat, setActiveChat, messages, sidebarWidth }: SidebarProps) => {\n  return (\n    <div style={{ width: `${sidebarWidth}px` }} className=\"h-full p-6 overflow-y-auto auto-hide-scrollbar bg-gradient-to-b from-indigo-950/80 to-purple-950/80 backdrop-blur-3xl border-l border-white/10\">\n      {!activeChat ? (\n        <AssistantList messages={messages} setActiveChat={setActiveChat} />\n      ) : (\n        <ChatView activeChat={activeChat} setActiveChat={setActiveChat} />\n      )}\n    </div>\n  );\n};\n\n// 助手列表组件\ninterface AssistantListProps {\n  messages: string[];\n  setActiveChat: (chat: number | null) => void;\n}\n\nconst AssistantList = ({ messages, setActiveChat }: AssistantListProps) => {\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.3 }}\n    >\n      <div className=\"flex flex-col gap-4\">\n        {Array.from({ length: 4 }).map((_, i) => {\n          const descriptions = [\n            \"分析能耗数据，监控设备能耗，标记异常并助力优化\",\n            \"监控冷库温湿度、光照，异常报警并优化照明使用\",\n            // \"实时监控单摄像头画面，检测运动及人员存在\",\n            \"基于空调能耗识别重大异常，预警设备故障\",\n            \"整合多源数据，提供基础运营状态监控仪表盘\",\n          ];\n          const statuses = [\n            \"分析中 - 分析能耗数据\",\n            \"监控中 - 监控冷库\",\n            // \"监控中 - 监控单摄像头画面\",\n            \"预警中 - 预警设备故障\",\n            \"分析中 - 整合多源数据\",\n          ];\n          \n          return (\n            <motion.div\n              key={i}\n              className=\"bg-white/5 backdrop-blur-md rounded-xl p-4 border border-white/10 hover:border-white/20 transition-all hover:shadow-lg\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: i * 0.05 }}\n            >\n              <button\n                onClick={() => setActiveChat(i + 1)}\n                className=\"flex items-center gap-4 w-full\"\n              >\n                <div className=\"w-12 h-12 rounded-full bg-white/10 flex-shrink-0 overflow-hidden\">\n                  <img\n                    src={`https://api.dicebear.com/7.x/bottts-neutral/svg?seed=${i}`}\n                    alt={`Avatar ${i + 1}`}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                <div className=\"flex-1 text-left\">\n                  <h3 className=\"text-lg font-semibold text-white\">{ASSISTANT_NAMES[i]}</h3>\n                  <p className=\"text-sm text-white/80 mt-1\">{descriptions[i]}</p>\n                  <div className=\"mt-2 flex items-center gap-2\">\n                    <span className={`w-2 h-2 rounded-full ${\n                      i % 2 === 0 ? 'bg-green-500' : 'bg-yellow-500'\n                    }`}></span>\n                    <span className=\"text-xs text-white/70\">{statuses[i]}</span>\n                  </div>\n                </div>\n              </button>\n            </motion.div>\n          );\n        })}\n      </div>\n      <div className=\"mt-6\">\n        <h2 className=\"text-xl font-bold text-white mb-4\">最新消息</h2>\n        <div className=\"h-58 overflow-hidden relative\">\n          <div className=\"animate-scroll space-y-2\">\n            {messages.map((msg, i) => (\n              <div key={i} className=\"p-3 bg-white/5 rounded-lg text-white/80 text-sm\">\n                {msg}\n              </div>\n            ))}\n            {/* 复制前面的消息，确保无缝滚动 */}\n            {messages.map((msg, i) => (\n              <div key={`dup-${i}`} className=\"p-3 bg-white/5 rounded-lg text-white/80 text-sm\">\n                {msg}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\n// 聊天视图组件\ninterface ChatViewProps {\n  activeChat: number;\n  setActiveChat: (chat: number | null) => void;\n}\n\nconst ChatView = ({ activeChat, setActiveChat }: ChatViewProps) => {\n  const { t } = useTranslation('translation');\n  return (\n    <motion.div\n      className=\"h-full flex flex-col\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.3 }}\n    >\n      <div className=\"flex items-center justify-between mb-6 p-4 bg-white/5 rounded-xl backdrop-blur-md border border-white/10 shadow-lg\">\n        <button\n          onClick={() => setActiveChat(null)}\n          className=\"text-white/80 hover:text-white transition-all flex items-center gap-2 px-4 py-2 rounded-lg hover:bg-white/10\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n          </svg>\n          返回\n        </button>\n        <h2 className=\"text-2xl font-bold text-white bg-gradient-to-r from-indigo-400 to-purple-400 bg-clip-text text-transparent max-w-[50%] truncate md:max-w-none md:whitespace-normal\">\n          {t('sidebar.chatWith', { name: activeChat ? ASSISTANT_NAMES[activeChat - 1] : '' })}\n        </h2>\n        <div className=\"w-8\"></div>\n      </div>\n      <div className=\"flex-1 rounded-xl overflow-hidden bg-white/5 backdrop-blur-md border border-white/10 shadow-lg transition-all hover:shadow-xl\">\n        <ChatComponent key={activeChat} currentRole={ASSISTANT_NAMES[activeChat - 1]} />\n      </div>\n    </motion.div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1174, "column": 0}, "map": {"version":3,"sources":["file:///Users/lihan2/Documents/project/chatui4cythera/src/app/dashboard/components/DeviceGrid.tsx"],"sourcesContent":["import { Card } from \"@tremor/react\";\nimport { useState } from \"react\";\n\n// 设备数据类型定义\nexport interface Device {\n  id: string;\n  name: string;\n  description: string;\n  adminState: string;\n  operatingState: string;\n  labels: string[];\n  serviceName: string;\n  profileName: string;\n  autoEvents?: {\n    interval: string;\n    onChange: boolean;\n    sourceName: string;\n  }[];\n  protocols: {\n    [key: string]: {\n      [key: string]: string;\n    };\n  };\n  properties: Record<string, any>;\n  created?: number;\n  modified?: number;\n}\n\nexport interface DeviceData {\n  apiVersion: string;\n  statusCode: number;\n  totalCount: number;\n  devices: Device[];\n}\n\ninterface DeviceGridProps {\n  deviceData: DeviceData;\n}\n\n// 设备状态标签组件\nconst StatusBadge = ({ status }: { status: string }) => {\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"UP\":\n        return \"bg-green-500\";\n      case \"DOWN\":\n        return \"bg-red-500\";\n      case \"UNLOCKED\":\n        return \"bg-blue-500\";\n      case \"LOCKED\":\n        return \"bg-yellow-500\";\n      default:\n        return \"bg-gray-500\";\n    }\n  };\n\n  return (\n    <span className={`px-2 py-1 rounded-full text-xs text-white ${getStatusColor(status)}`}>\n      {status}\n    </span>\n  );\n};\n\n// 设备类型图标组件\nconst DeviceTypeIcon = ({ type }: { type: string }) => {\n  const getIconByType = (type: string) => {\n    switch (type.toLowerCase()) {\n      case \"modbus tcp\":\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\" />\n          </svg>\n        );\n      case \"opc ua\":\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-purple-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z\" />\n          </svg>\n        );\n      case \"onvif\":\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n          </svg>\n        );\n      default:\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n          </svg>\n        );\n    }\n  };\n\n  return getIconByType(type);\n};\n\n// 设备详情弹窗组件\nconst DeviceDetailModal = ({ device, onClose }: { device: Device | null; onClose: () => void }) => {\n  if (!device) return null;\n\n  const getProtocolDetails = () => {\n    const protocolEntries = Object.entries(device.protocols);\n    if (protocolEntries.length === 0) return \"无协议信息\";\n\n    const [protocolName, protocolDetails] = protocolEntries[0];\n    return (\n      <div>\n        <h3 className=\"text-lg font-semibold text-white mb-2\">{protocolName}</h3>\n        <div className=\"grid grid-cols-2 gap-2\">\n          {Object.entries(protocolDetails).map(([key, value]) => (\n            <div key={key} className=\"flex flex-col\">\n              <span className=\"text-xs text-gray-400\">{key}</span>\n              <span className=\"text-sm text-white\">{value}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center z-50\">\n      <div className=\"bg-gradient-to-br from-indigo-950 to-purple-950 rounded-xl p-6 max-w-2xl w-full max-h-[80vh] overflow-y-auto\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-white\">{device.name}</h2>\n          <button\n            onClick={onClose}\n            className=\"text-white/80 hover:text-white\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"space-y-6\">\n          <div>\n            <h3 className=\"text-lg font-semibold text-white mb-2\">基本信息</h3>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <span className=\"text-gray-400\">ID</span>\n                <p className=\"text-white text-sm\">{device.id}</p>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">描述</span>\n                <p className=\"text-white text-sm\">{device.description}</p>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">管理状态</span>\n                <p className=\"text-white text-sm\">\n                  <StatusBadge status={device.adminState} />\n                </p>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">运行状态</span>\n                <p className=\"text-white text-sm\">\n                  <StatusBadge status={device.operatingState} />\n                </p>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">服务名称</span>\n                <p className=\"text-white text-sm\">{device.serviceName}</p>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">配置文件</span>\n                <p className=\"text-white text-sm\">{device.profileName}</p>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">标签</span>\n                <div className=\"flex flex-wrap gap-1 mt-1\">\n                  {device.labels.map((label, index) => (\n                    <span key={index} className=\"px-2 py-0.5 bg-indigo-900/50 rounded-full text-xs text-white\">\n                      {label}\n                    </span>\n                  ))}\n                </div>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">创建时间</span>\n                <p className=\"text-white text-sm\">\n                  {device.created ? new Date(device.created).toLocaleString() : \"未知\"}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-semibold text-white mb-2\">协议信息</h3>\n            {getProtocolDetails()}\n          </div>\n\n          {device.autoEvents && device.autoEvents.length > 0 && (\n            <div>\n              <h3 className=\"text-lg font-semibold text-white mb-2\">自动事件</h3>\n              <div className=\"space-y-2\">\n                {device.autoEvents.map((event, index) => (\n                  <div key={index} className=\"bg-white/5 p-3 rounded-lg\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-white\">{event.sourceName}</span>\n                      <span className=\"text-blue-400\">{event.interval}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-400 mt-1\">\n                      {event.onChange ? \"仅在变化时触发\" : \"定时触发\"}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 设备网格组件\nexport const DeviceGrid = ({ deviceData }: DeviceGridProps) => {\n  const [selectedDevice, setSelectedDevice] = useState<Device | null>(null);\n\n  if (!deviceData || !deviceData.devices || deviceData.devices.length === 0) {\n    return (\n      <Card className=\"bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl shadow-lg p-6\">\n        <div className=\"text-center py-8\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 mx-auto text-gray-400 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n          <h3 className=\"text-xl font-semibold text-white mb-2\">暂无设备数据</h3>\n          <p className=\"text-gray-400\">请检查设备连接或刷新页面</p>\n        </div>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-semibold text-white\">设备列表</h2>\n        <div className=\"text-sm text-gray-400\">\n          共 {deviceData.totalCount} 个设备\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {deviceData.devices.map((device) => (\n          <Card \n            key={device.id} \n            className=\"bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl shadow-lg hover:shadow-xl transition-all hover:bg-white/10 cursor-pointer\"\n            onClick={() => setSelectedDevice(device)}\n          >\n            <div className=\"p-4\">\n              <div className=\"flex items-start gap-3\">\n                <div className=\"p-2 bg-white/10 rounded-lg\">\n                  {device.labels && device.labels.length > 0 ? (\n                    <DeviceTypeIcon type={device.labels[0]} />\n                  ) : (\n                    <DeviceTypeIcon type=\"\" />\n                  )}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <h3 className=\"text-lg font-semibold text-white truncate\">{device.name}</h3>\n                  <p className=\"text-sm text-gray-400 truncate\">{device.description}</p>\n                </div>\n              </div>\n\n              <div className=\"mt-4 flex flex-wrap gap-2\">\n                <StatusBadge status={device.adminState} />\n                <StatusBadge status={device.operatingState} />\n              </div>\n\n              <div className=\"mt-4 text-xs text-gray-400 flex justify-between\">\n                <span>ID: {device.id.substring(0, 8)}...</span>\n                <span>服务: {device.serviceName.replace('device-', '')}</span>\n              </div>\n            </div>\n          </Card>\n        ))}\n      </div>\n\n      {selectedDevice && (\n        <DeviceDetailModal \n          device={selectedDevice} \n          onClose={() => setSelectedDevice(null)} \n        />\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2006, "column": 0}, "map": {"version":3,"sources":["file:///Users/lihan2/Documents/project/chatui4cythera/src/app/dashboard/components/DashboardContent.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useThinkContext } from '../ThinkContext';\nimport { motion } from \"framer-motion\";\nimport { CardGrid } from './CardGrid';\nimport { ChartGrid } from './EChartComponent';\nimport { Sidebar } from './Sidebar';\nimport { DeviceGrid } from './DeviceGrid';\n\n// 类型定义\nexport interface CardData {\n  title: string;\n  value: string | number;\n  trend?: string;\n}\n\nexport interface ChartData {\n  type: string;\n  data: any[];\n  title: string;\n  xAxis?: string;\n  yAxis?: string;\n}\n\nexport interface DeviceData {\n  apiVersion: string;\n  statusCode: number;\n  totalCount: number;\n  devices: Device[];\n}\n\nexport interface Device {\n  id: string;\n  name: string;\n  description: string;\n  adminState: string;\n  operatingState: string;\n  labels: string[];\n  serviceName: string;\n  profileName: string;\n  created: number;\n  modified: number;\n  autoEvents?: AutoEvent[];\n  protocols: Record<string, any>;\n  properties: Record<string, any>;\n}\n\nexport interface AutoEvent {\n  interval: string;\n  onChange: boolean;\n  sourceName: string;\n}\n\n// 助手名称常量\nexport const ASSISTANT_NAMES = [\"数据分析助手\", \"能源管理助手\", \"设备监控助手\"];\n\n\n// 仪表板内容组件\nexport const DashboardContent = () => {\n  const { thinkData } = useThinkContext();\n  \n  // 仪表板状态\n  const [cardData, setCardData] = useState<CardData[]>([\n    {\n      title: '总用电量',\n      value: \"1880 kWh\",\n      trend: '较正常值异常增高42%'\n    },\n    {\n      title: '最大异常日期',\n      value: \"2025-04-11\"\n    },\n    {\n      title: '每月预计节约电量',\n      value: \"120 kWh\"\n    }\n  ]);\n  const { t, i18n } = useTranslation('translation');\n\n  // 多语言内容初始化\n  useEffect(() => {\n    setCardData([\n      {\n        title: t('dashboard.totalElectricity', '总用电量'),\n        value: \"1880 kWh\",\n        trend: t('dashboard.abnormalTrend', '较正常值异常增高42%')\n      },\n      {\n        title: t('dashboard.maxAbnormalDate', '最大异常日期'),\n        value: \"2025-04-11\"\n      },\n      {\n        title: t('dashboard.monthlySaving', '每月预计节约电量'),\n        value: \"120 kWh\"\n      }\n    ]);\n  }, [i18n.language]);\n  const [chartData, setChartData] = useState<ChartData[]>([]);\n  \n  // 多语言内容初始化\n  const [dashboardTitle, setDashboardTitle] = useState('数据概览');\n  useEffect(() => {\n    setDashboardTitle(t('dashboard.overview', '数据概览'));\n  }, [i18n.language]);\n  \n  // 设备数据状态\n  const [deviceData, setDeviceData] = useState<DeviceData>({\n    apiVersion: \"v3\",\n    statusCode: 200,\n    totalCount: 0,\n    devices: []\n  });\n  \n  // 从 API 获取设备数据\n  useEffect(() => {\n    const fetchDevices = async () => {\n      try {\n        const response = await fetch('/api/devices?offset=0&limit=10');\n        if (!response.ok) {\n          throw new Error(\n  t('dashboard.deviceApiError', {\n    status: response.status,\n    statusText: response.statusText,\n    defaultValue: `Device API request failed: ${response.status} ${response.statusText}`\n  })\n);\n        }\n        \n        const data = await response.json();\n        console.log('从 API 获取的设备数据:', data);\n        \n        setDeviceData(data);\n      } catch (error) {\n        console.error('获取设备数据出错:', error);\n      }\n    };\n    \n    fetchDevices();\n  }, []);\n  \n  // 侧边栏状态\n  const [sidebarWidth] = useState(320);\n  const [isChatActive, setIsChatActive] = useState(false); // 添加聊天模式状态\n  const [messages, setMessages] = useState<string[]>([\n    '数字能效分析师：能源消耗数据分析报告已生成，本月节能率提升12%',\n    '数字环境专员：冷库温度波动超出预设范围，建议检查制冷系统',\n    '数字安防监控员：监控到3号区域有未授权人员活动，已自动记录',\n    '数字设备健康主管：2号生产线设备预测性维护提醒，建议下周检修',\n    '数字综合运营协调员：已整合各部门数据，月度运营报告可在系统查看',\n    '数字能效分析师：发现能耗异常峰值，可能存在设备效率问题',\n    '数字环境专员：环境监测系统显示空气质量指数良好，符合生产标准'\n  ]);\n  useEffect(() => {\n    setMessages([\n      t('dashboard.msg.energyAnalyst', '数字能效分析师：能源消耗数据分析报告已生成，本月节能率提升12%'),\n      t('dashboard.msg.envSpecialist', '数字环境专员：冷库温度波动超出预设范围，建议检查制冷系统'),\n      t('dashboard.msg.security', '数字安防监控员：监控到3号区域有未授权人员活动，已自动记录'),\n      t('dashboard.msg.healthManager', '数字设备健康主管：2号生产线设备预测性维护提醒，建议下周检修'),\n      t('dashboard.msg.coordinator', '数字综合运营协调员：已整合各部门数据，月度运营报告可在系统查看'),\n      t('dashboard.msg.energyAnalyst2', '数字能效分析师：发现能耗异常峰值，可能存在设备效率问题'),\n      t('dashboard.msg.envSpecialist2', '数字环境专员：环境监测系统显示空气质量指数良好，符合生产标准')\n    ]);\n  }, [i18n.language]);\n  const [activeChat, setActiveChat] = useState<number | null>(null);\n  \n  // 当 activeChat 改变时，更新聊天模式状态\n  useEffect(() => {\n    setIsChatActive(activeChat !== null);\n  }, [activeChat]);\n  const messagesEndRef = useRef<HTMLDivElement | null>(null);\n\n  // 处理发送消息\n  const handleSendMessage = (message: string) => {\n    setMessages(prev => [...prev, `用户: ${message}`]);\n    // 这里可以添加实际的消息发送逻辑\n  };\n  \n  // 切换聊天模式\n  const toggleChatMode = (isActive: boolean) => {\n    setIsChatActive(isActive);\n  };\n\n  // 消息滚动到底部\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // 监听 thinkData 变化，更新仪表板\n  useEffect(() => {\n    if (!thinkData?.parsedContent) return;\n    \n    console.log(\"ThinkData 更新:\", thinkData);\n    \n    // 更新卡片数据\n    if (thinkData.parsedContent.cards && thinkData.parsedContent.cards.length > 0) {\n      const newCardData = thinkData.parsedContent.cards.flatMap(card => \n        card.metrics.map(metric => ({\n          title: metric.title,\n          value: metric.value,\n          trend: metric.trend\n        }))\n      );\n      \n      if (newCardData.length > 0) {\n        setCardData(newCardData);\n      }\n    }\n    \n    // 更新图表数据\n    if (thinkData.parsedContent.charts && thinkData.parsedContent.charts.length > 0) {\n      try {\n        // 从 thinkData 中提取图表数据\n        const chartDataFromThink = thinkData.parsedContent.charts.map((chart: any) => ({\n          type: chart.type,\n          data: typeof chart.data === 'string' ? JSON.parse(chart.data) : chart.data,\n          title: chart.title,\n          xAxis: chart.xAxis || '',\n          yAxis: chart.yAxis || ''\n        }));\n        \n        console.log('解析后的图表数据:', chartDataFromThink);\n        \n        // 直接保存图表数据，用于动态渲染\n        setChartData(chartDataFromThink);\n        \n      } catch (error) {\n        console.error(\"解析图表数据错误:\", error);\n      }\n    }\n    \n    // 更新标题\n    if (thinkData.metadata?.title) {\n      setDashboardTitle(thinkData.metadata.title);\n    }\n    \n    // 添加新消息\n    if (thinkData.content) {\n      // 根据当前活跃的聊天助手添加消息\n      const assistantName = activeChat !== null && activeChat >= 0 && activeChat < ASSISTANT_NAMES.length\n        ? ASSISTANT_NAMES[activeChat - 1] // 修正索引计算，因为 activeChat 从 1 开始\n        : ASSISTANT_NAMES[0];\n        \n      const newMessage = `${assistantName}：${thinkData.content.substring(0, 50)}${thinkData.content.length > 50 ? '...' : ''}`;\n      setMessages(prev => [...prev.slice(-6), newMessage]);\n    }\n  }, [thinkData, activeChat]);\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n      className=\"flex h-screen bg-gradient-to-br from-indigo-900/50 to-purple-900/50 backdrop-blur-3xl\"\n    >\n      {/* 左侧主内容区域 */}\n      <div className=\"flex-1 overflow-y-auto p-12 space-y-12 auto-hide-scrollbar bg-gradient-to-br from-indigo-950 to-purple-950\">\n        <h1 className=\"text-4xl font-bold text-white\">{dashboardTitle}</h1>\n        \n        {/* 卡片网格 */}\n        <div className=\"mb-8\">\n          <CardGrid cardData={cardData} />\n        </div>\n        \n        {/* 图表网格 */}\n        <div className=\"mb-8\">\n          <ChartGrid chartData={chartData}/>\n        </div>\n        \n        {/* 设备网格 */}\n        <div className=\"mb-8\">\n          <DeviceGrid deviceData={deviceData} />\n        </div>\n      </div>\n      \n      {/* 可拖拽分割线 */}\n      <div\n        className=\"w-2 relative cursor-col-resize\"\n      >\n        <div className=\"absolute inset-y-0 left-1/2 -translate-x-1/2 w-1 h-full bg-white/20 hover:bg-white/40 transition-colors\" />\n        <div className=\"absolute inset-y-1/2 -translate-y-1/2 left-1/2 -translate-x-1/2 w-8 h-8 rounded-full bg-white/10 backdrop-blur-md flex items-center justify-center hover:bg-white/20 transition-all\">\n          <div className=\"w-1 h-4 bg-white/50 rounded-full\" />\n        </div>\n      </div>\n      \n      {/* 右侧边栏 - 在聊天模式下加宽 */}\n      <div className={`${isChatActive ? 'w-[640px]' : 'w-[320px]'} h-full transition-all duration-300 ease-in-out`}>\n        <Sidebar \n          activeChat={activeChat}\n          setActiveChat={setActiveChat}\n          messages={messages}\n          sidebarWidth={isChatActive ? 640 : sidebarWidth} // 根据聊天模式动态调整宽度\n        />\n      </div>\n    </motion.div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2388, "column": 0}, "map": {"version":3,"sources":["file:///Users/lihan2/Documents/project/chatui4cythera/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\nimport { ThinkProvider } from './ThinkContext';\nimport { DashboardContent } from './components/DashboardContent';\n\n// 主页面组件\nexport default function DashboardPage() {\n  return (\n    <ThinkProvider>\n      <DashboardContent />\n    </ThinkProvider>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAKe,SAAS;IACtB,qBACE,6LAAC,2IAAA,CAAA,gBAAa;kBACZ,cAAA,6LAAC,6JAAA,CAAA,mBAAgB;;;;;;;;;;AAGvB;KANwB","debugId":null}}]
}